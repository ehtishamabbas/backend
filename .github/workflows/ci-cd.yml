name: Node.js Backend CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create .env file
      run: |
        cp .env.example .env
        echo "MONGODB_URL=mongodb://localhost:27017" >> .env
        echo "DATABASE_NAME=real_estate_test" >> .env
        echo "MONGODB_COLLECTION=listings" >> .env
        echo "MONGODB_IMAGES_COLLECTION=images" >> .env
    
    - name: Validate environment
      run: npm run validate:env
    
    - name: Initialize database
      run: npm run db:init
    
    - name: Run API tests
      run: npm test
    
    - name: Run linting
      run: npm run lint || true
    
  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push API image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile_express
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/real-estate-api:latest
          ${{ secrets.DOCKER_USERNAME }}/real-estate-api:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/real-estate-api:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/real-estate-api:buildcache,mode=max
    
    - name: Build and push Crawler image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile_crawler
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/real-estate-crawler:latest
          ${{ secrets.DOCKER_USERNAME }}/real-estate-crawler:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/real-estate-crawler:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/real-estate-crawler:buildcache,mode=max
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          cd /opt/real-estate-backend
          docker-compose pull
          docker-compose up -d
          docker system prune -af
